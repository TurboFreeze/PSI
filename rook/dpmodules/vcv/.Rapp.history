test <- rbind(test, test)
test
1/4 * as.matrix(c(1,1,1,1))
ones <- as.matrix(c(1,1,1,1))
1/4 * ones %*% t(ones) %*% theData
1/4 * ones %*% t(ones) %*% test
ones %*% t(ones) %*% test
1/4 * ones %*% t(ones) %*% test
theData - (1/4 * ones %*% t(ones) %*% test)
test - (1/4 * ones %*% t(ones) %*% test)
test[2,1] <- 2
test[3,1] <- 2
test
test - (1/4 * ones %*% t(ones) %*% test)
?as.matrix()
?as.matrix(1, ncol = 1, nrow = 10)
as.matrix(1, ncol = 1, nrow = 10)
test <- rep(1, 10)
test
ones
test - (1/4 * ones %*% t(ones) %*% test)
ones
test
test <- rbind(test, test)
test
test <- rbind(test, c(1,2,3,4,5,6,7,8,9,10))
test
test <- rbind(test, c(1,2,3,4,5,6,7,8,9,10))
test
IDENTITY_ROW <- rep(1, nrow(test))
IDENTITY_ROW
theData <- test
A <- theData - (1/n) * IDENTITY_ROW %*% t(IDENTITY_ROW) %*% theData
n <- nrow(test)
A <- theData - (1/n) * IDENTITY_ROW %*% t(IDENTITY_ROW) %*% theData
A
mean(test[,2])
2- 1.909091
mean(test[,8])
test[,8] - mean(test,8)
test[,8] - mean(test[,8)
test[,8] - mean(test[,8])
A[,8] - test[,8] - mean(test[,8])
A[,8] - (test[,8] - mean(test[,8]))
svd
?svd
svd(test)
sigma <- diag(svd(test)$d)
sigma
svd(test)$d
diag(1, nrow = 100, ncol = 10)
eta
n <- 100
r <- 5
noise_dist <- rnorm(r*n, mean = 0, sd = 1)#
#
M <- NULL#
for (i in 1:r) {#
#
	loopRow <- NULL#
	for (j in 1:n) {#
		loopRow <- append(loopRow, noise_dist[1])#
		noise_dist <- noise_dist[2:length(noise_dist)]#
	}#
	M <- rbind(M, loopRow)#
}
M
rm(list=ls())
setwd("~/Dropbox/School/differential privacy/privacy_tools/vcv/current/")
source("Test_simul.R")
source("Test_simul.R")
source("Test_simul.R")
rm(list=ls())
setwd("~/Dropbox/School/differential privacy/privacy_tools/vcv/current/")
source("Test_simple.R")
source("Test_simple.R")
rm(list=ls())
setwd("~/Dropbox/School/differential privacy/privacy_tools/vcv/current/")
source("Test_simple.R")
source("Test_simple.R")
source("Test_simple.R")
source("Test_simple.R")
actual
release
source("Test_simple.R")
?norm
rm(list=ls())
setwd("~/Dropbox/School/differential privacy/privacy_tools/vcv/current/")
source("Test_simple.R")
source("Test_simple.R")
hist(spec_runs)
hist(var1)
abline(col="green", v = var(mydata[,1]))
var(mydata[,1])
abline(col="green", v = var(mydata[,1])/50000)
var(mydata[,1])/1
var(mydata[,1]) * 50000
mean(var1)
sqrt(mean(var1))
sqrt(mean(var1)/50000)
release
actual
hist(var1, main="Variance of X_1", xlab="Noisy Variance")
abline(col="green", v= 30957534)
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance")
abline(col="green", v=30985910)
?hist
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance" breaks=seq(min(cov1),max(cov1),l=10)
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=10)
)
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=20))
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=40))
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=20))
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=15))
source("Test_simple.R")
source("Test_simple.R")
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=15))
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=20))
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=100))
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=20))
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=15))
actual
releas
release
abline(v= 30876220, col = "green")
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=20))
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=15))
abline(v=30876220)
abline(v=30876220, col="green")
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=20))
abline(v=30876220, col="green")
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=17))
hist(cov1, main="cov(X_1, X_2)", xlab="Noisy Covariance", breaks=seq(min(cov1),max(cov1),l=16))
abline(v=30876220, col="green")
hist(var1, main="Variance of X_1", xlab="Noisy Variance", breaks=seq(min(var1),max(var1),l=16))
abline(color="green", v= 30848265)
abline(col="green", v= 30848265)
hist(spec_runs, main="Spectral Norm of Error", xlab="Spectral Norm (release - actual)", breaks=seq(min(spec_runs),max(spec_runs),l=16))
hist(F_runs, main="Frobenius Norm of Error", xlab="Frobenius Norm (release - actual)", breaks=seq(min(F_runs),max(F_runs),l=16))
which(1==seq(from = 1/100, to=1, by = 1/100))
which(.9==seq(from = 1/100, to=1, by = 1/100))
source("Test_simple.R")
head(spec)
mean <- NULL
for (i in 1:100) {
mean <- append(mean, mean(spec[i, ]))
}
mean
plot(EPSILON, mean)
max <- NULL
for (i in 1:100) {
max <- append(max, quantile(spec[i, ], 0.95))
}
min <- NULL
for (i in 1:100) {
min <- append(min, min(spec[i, ]))
}
min
max
library(Hmisc)
errbar(EPSILON, mean, max, min)
source("Test_simple.R")
mean <- NULL#
min <- NULL#
max <- NULL#
#
for(i in 1:length(EPSILON)){#
	mean <- append(mean, mean(spec[i, ]))#
	min <- append(min, min(spec[i, ]))#
	max <- append(max, quantile(spec[i, ], 0.95))#
}
errbar(EPSILON, mean, max, min)
errbar(EPSILON, mean, max, min, main="Error When Increasing Epsilon", xlab="Epsilon Value", ylab="Spectral Norm(Error_matrix)")
title(main="Error when Increasing Epsilon")
source("Test_simple_d.R")
source("Test_simple_d.R")
source("Test_simple_d.R")
source("Test_simple_d.R")
source("Test_simple_d.R")
mean <- NULL#
 min <- NULL#
 max <- NULL#
 for(i in 1:length(DSEQ)){#
 	mean <- append(mean, mean(spec[i, ]))#
	min <- append(min, min(spec[i, ]))#
 	max <- append(max, quantile(spec[i, ], 0.95))#
 }
errbar(DSEQ, mean, max, min)
errbar(DSEQ[1:30], mean, max, min)
errbar(DSEQ[1:30], mean[1:30], max[1:30], min[1:30])
errbar(DSEQ[1:30], mean[1:30], max[1:30], min[1:30], main="Error when Increasing d", xlab="d", ylab="Spectral Norm of Error_matrix")
title("Erro when Increasing d")
title("Error when Increasing d")
errbar(DSEQ[1:30], mean[1:30], max[1:30], min[1:30], main="Error when Increasing d", xlab="d", ylab="Spectral Norm of Error_matrix")
title("Error when Increasing d")
source("Test_simple_d.R")
mean <- NULL#
 min <- NULL#
 max <- NULL#
 for(i in 1:length(NSEQ)){#
 	mean <- append(mean, mean(spec[i, ]))#
	min <- append(min, min(spec[i, ]))#
 	max <- append(max, quantile(spec[i, ], 0.95))#
 }
errbar(NSEQ, mean, max, min, main="", xlab="n", ylab="Spectral Norm of Error_matrix")
errbar(NSEQ[1:100], mean[1:100], max[1:00], min, main="", xlab="n", ylab="Spectral Norm of Error_matrix")
errbar(NSEQ[1:100], mean[1:100], max[1:100], min, main="", xlab="n", ylab="Spectral Norm of Error_matrix")
errbar(NSEQ[1:100], mean[1:50], max[1:50], min, main="", xlab="n", ylab="Spectral Norm of Error_matrix")
errbar(NSEQ[1:50], mean[1:50], max[1:50], min, main="", xlab="n", ylab="Spectral Norm of Error_matrix")
errbar(NSEQ[1:25], mean[1:25], max[1:25], min, main="", xlab="n", ylab="Spectral Norm of Error_matrix")
errbar(NSEQ[1:25], mean[1:25], max[1:25], min, main="", xlab="n", ylab="Spectral Norm of Error_matrix")
errbar(NSEQ[1:25], mean[1:25], max[1:25], min[1:25], main="", xlab="n", ylab="Spectral Norm of Error_matrix")
errbar(NSEQ[2:25], mean[2:25], max[2:25], min[2:25], main="", xlab="n", ylab="Spectral Norm of Error_matrix")
title(main="Error while Increasing n")
rm(list=ls())
setwd("~/Dropbox/School/differential privacy/privacy_tools/vcv/current/")
source("Test_simul.R")
warnings()
source("Test_simul.R")
source("Test_simul.R")
TRUE_BETA <- seq(from=-100, to=100, by=5)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(theFile[, 10], 0.95))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "95% Quantile of Beta Dist while Manipulating Coefficient", xlab="True Beta 2", ylab="95% l2(Beta - hat_Beta)")
TRUE_BETA <- seq(from=-100, to=100, by=5)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, mean(theFile[, 10]))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "95% Quantile of Beta Dist while Manipulating Coefficient", xlab="True Beta 2", ylab="95% l2(Beta - hat_Beta)")
printString
printString
beta2_runs[2]
beta2_runs[3]
beta2_runs[]
Beta
beta
Beta_runs
plot(Beta_runs)
LM_BETA
source("Test_simul.R")
source("Test_simul.R")
LM_BETA
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, mean(theFile[, 10]))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "95% Quantile of Beta Dist while Manipulating Coefficient", xlab="True Beta 2", ylab="95% l2(Beta - hat_Beta)")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(theFile[, 10], 0.7))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of Beta Dist while Manipulating Coefficient", xlab="True Beta 2", ylab="70% l2(Beta - hat_Beta)")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(theFile[, 10], 0.60))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of Beta Dist while Manipulating Coefficient", xlab="True Beta 2", ylab="70% l2(Beta - hat_Beta)")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(theFile[, 10], 0.50))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of Beta Dist while Manipulating Coefficient", xlab="True Beta 2", ylab="70% l2(Beta - hat_Beta)")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(coeff - theFile[, 2]), 0.80))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "80% Quantile of Coeff Distance while Manipulating Coefficient", xlab="True Beta 2", ylab="80% |C - \hat C|")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(coeff - theFile[, 2]), 0.80))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "80% Quantile of Coeff Distance while Manipulating Coefficient", xlab="True Beta 2", ylab="80% |C - hat C|")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(coeff - theFile[, 2]), 0.76))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "76% Quantile of Coeff Distance while Manipulating Coefficient", xlab="True Beta 2", ylab="76% |C - hat C|")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(coeff - theFile[, 2]), 0.73))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "73% Quantile of Coeff Distance while Manipulating Coefficient", xlab="True Beta 2", ylab="73% |C - hat C|")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(coeff - theFile[, 2]), 0.70))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of Coeff Distance while Manipulating Coefficient", xlab="True Beta 2", ylab="70% |C - hat C|")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(0 - theFile[, 1]), 0.80))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of Int Distance while Manipulating Coefficient", xlab="True Beta 2", ylab="70% |0 - hat (int)|")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(0 - theFile[, 1]), 0.90))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of Int Distance while Manipulating Coefficient", xlab="True Beta 2", ylab="70% |0 - hat (int)|")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(0 - theFile[, 1]), 0.90))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "90% Quantile of Int Distance while Manipulating Coefficient", xlab="True Beta 2", ylab="90% |0 - hat (int)|")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 1]), 0.85))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "85% Quantile of Int Distance while Manipulating Coefficient", xlab="True Beta 2", ylab="85% |0 - hat (int)|")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 1]), 0.80))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "80% Quantile of Int Distance while Manipulating Coefficient", xlab="True Beta 2", ylab="80% |0 - hat (int)|")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 1]), 0.83))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "83% Quantile of Int Distance while Manipulating Coefficient", xlab="True Beta 2", ylab="83% |0 - hat (int)|")
source("Test_PUMS.R")
rm(list=ls())#
setwd("~/Dropbox/School/differential privacy/privacy_tools/vcv/current/")
source("Test_PUMS.R")
plot(1:1000, t1_runs)
plot(1:1000, Pr1_runs)
plot(1:1000, Pr2_runs)
plot(1:1000, Pr2_runs, ylim = 0.1)
plot(1:1000, Pr2_runs, ylim = c(0, 0.1))
plot(1:1000, Pr3_runs, ylim = c(0, 0.1))
plot(1:1000, Pr1_runs, ylim = c(0, 0.1))
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.95))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "95% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="95% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.90))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "90% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="90% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.85))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "85% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="85% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.70))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="70% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.50))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="70% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.10))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="70% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.25))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="70% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.4))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="70% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.5))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="70% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.45))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "45% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="45% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.41))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "45% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="45% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.42))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "45% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="45% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(theFile[, 9]/ 49997), 0.43))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "45% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="45% OLS Estimator")
source("Test_PUMS.R")
mean(beta1_runs)
mean(beta2_runs)
mean(beta3_runs)
mean((beta1_runs - (-22295.15))^2)
sqrt(mean((beta1_runs - (-22295.15))^2))
sqrt(mean((beta2_runs - (278.3603))^2))
sqrt(mean((beta3_runs - (4225.529))^2))
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(coeff - theFile[, 2]), 0.68))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="70% OLS Estimator")
TRUE_BETA <- seq(from=-1000, to=1000, by=10)#
#
means <- NULL#
for (coeff in TRUE_BETA) {#
#
fileName <- paste("./simul_results/coeff=", coeff, ".txt", sep="")#
theFile <- read.csv(file = fileName, sep = ",")#
#
means <- append(means, quantile(abs(coeff - theFile[, 2]), 0.67))#
}		 #
#
#plot(iterate_n, spec, main = "Spectral Norm vs. n", xlab="n", ylab="mean(Spectral Norm (error))")#
plot(TRUE_BETA, means, main = "70% Quantile of OLS Estimator While Changing Coefficient", xlab="True Beta 2", ylab="70% OLS Estimator")
